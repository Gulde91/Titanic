geom_text_repel(data = distance, aes(x = lon, y = lat, label = km),
col = "orange", size = 3, segment.color = NA) +
geom_text_repel(data = distance, aes(x = lon, y = lat+0.05, label = hours),
col = "orange", size = 3, segment.color = NA) +
geom_segment(data = Colombo2Unawatuna, aes(x = startLon, y = startLat, xend = endLon, yend = endLat),
colour ="yellow", size = 0.5) +
geom_segment(data = Unawatuna2Yala, aes(x = startLon, y = startLat, xend = endLon, yend = endLat),
colour ="yellow", size = 0.5) +
geom_segment(data = Yala2Ella, aes(x = startLon, y = startLat, xend = endLon, yend = endLat),
colour ="yellow", size = 0.5) +
geom_segment(data = Ella2Colombo, aes(x = startLon, y = startLat, xend = endLon, yend = endLat),
colour ="yellow", size = 0.5)
distance$lon <- c((79.86124+80.24886+0.3)/2, (80.24886+81.30815)/2, (81.30815+81.04655)/2, (81.04655+79.86124)/2)
distance$lat <- c((6.927079+6.017447-0.2)/2, (6.017447+6.427169)/2, (6.427169+6.866699)/2, (6.866699+6.927079)/2)
ggmap(SL) +
geom_point(data = adresser, aes(x = lon, y = lat), colour = "red", size = 1) +
geom_text_repel(data = adresser, aes(x = lon, y = lat, label = adresser),
col = "orange", size = 4, segment.color = NA) +
geom_text_repel(data = distance, aes(x = lon, y = lat, label = km),
col = "orange", size = 3, segment.color = NA) +
geom_text_repel(data = distance, aes(x = lon, y = lat+0.05, label = hours),
col = "orange", size = 3, segment.color = NA) +
geom_segment(data = Colombo2Unawatuna, aes(x = startLon, y = startLat, xend = endLon, yend = endLat),
colour ="yellow", size = 0.5) +
geom_segment(data = Unawatuna2Yala, aes(x = startLon, y = startLat, xend = endLon, yend = endLat),
colour ="yellow", size = 0.5) +
geom_segment(data = Yala2Ella, aes(x = startLon, y = startLat, xend = endLon, yend = endLat),
colour ="yellow", size = 0.5) +
geom_segment(data = Ella2Colombo, aes(x = startLon, y = startLat, xend = endLon, yend = endLat),
colour ="yellow", size = 0.5)
distance$lat <- c((6.927079+6.017447-0.2)/2, (6.017447+6.427169-0.2)/2, (6.427169+6.866699)/2, (6.866699+6.927079)/2)
ggmap(SL) +
geom_point(data = adresser, aes(x = lon, y = lat), colour = "red", size = 1) +
geom_text_repel(data = adresser, aes(x = lon, y = lat, label = adresser),
col = "orange", size = 4, segment.color = NA) +
geom_text_repel(data = distance, aes(x = lon, y = lat, label = km),
col = "orange", size = 3, segment.color = NA) +
geom_text_repel(data = distance, aes(x = lon, y = lat+0.05, label = hours),
col = "orange", size = 3, segment.color = NA) +
geom_segment(data = Colombo2Unawatuna, aes(x = startLon, y = startLat, xend = endLon, yend = endLat),
colour ="yellow", size = 0.5) +
geom_segment(data = Unawatuna2Yala, aes(x = startLon, y = startLat, xend = endLon, yend = endLat),
colour ="yellow", size = 0.5) +
geom_segment(data = Yala2Ella, aes(x = startLon, y = startLat, xend = endLon, yend = endLat),
colour ="yellow", size = 0.5) +
geom_segment(data = Ella2Colombo, aes(x = startLon, y = startLat, xend = endLon, yend = endLat),
colour ="yellow", size = 0.5)
distance$lon <- c((79.86124+80.24886+0.3)/2, (80.24886+81.30815)/2, (81.30815+81.04655-0.2)/2, (81.04655+79.86124)/2)
distance$lat <- c((6.927079+6.017447-0.2)/2, (6.017447+6.427169-0.15)/2, (6.427169+6.866699-0.3)/2, (6.866699+6.927079)/2)
ggmap(SL) +
geom_point(data = adresser, aes(x = lon, y = lat), colour = "red", size = 1) +
geom_text_repel(data = adresser, aes(x = lon, y = lat, label = adresser),
col = "orange", size = 4, segment.color = NA) +
geom_text_repel(data = distance, aes(x = lon, y = lat, label = km),
col = "orange", size = 3, segment.color = NA) +
geom_text_repel(data = distance, aes(x = lon, y = lat+0.05, label = hours),
col = "orange", size = 3, segment.color = NA) +
geom_segment(data = Colombo2Unawatuna, aes(x = startLon, y = startLat, xend = endLon, yend = endLat),
colour ="yellow", size = 0.5) +
geom_segment(data = Unawatuna2Yala, aes(x = startLon, y = startLat, xend = endLon, yend = endLat),
colour ="yellow", size = 0.5) +
geom_segment(data = Yala2Ella, aes(x = startLon, y = startLat, xend = endLon, yend = endLat),
colour ="yellow", size = 0.5) +
geom_segment(data = Ella2Colombo, aes(x = startLon, y = startLat, xend = endLon, yend = endLat),
colour ="yellow", size = 0.5)
distance$lon <- c((79.86124+80.24886+0.3)/2, (80.24886+81.30815)/2, (81.30815+81.04655-0.1.5)/2, (81.04655+79.86124)/2)
distance$lat <- c((6.927079+6.017447-0.2)/2, (6.017447+6.427169-0.15)/2, (6.427169+6.866699-0.3)/2, (6.866699+6.927079-0.3)/2)
distance$lon <- c((79.86124+80.24886+0.3)/2, (80.24886+81.30815)/2, (81.30815+81.04655-0.15)/2, (81.04655+79.86124)/2)
distance$lat <- c((6.927079+6.017447-0.2)/2, (6.017447+6.427169-0.15)/2, (6.427169+6.866699-0.3)/2, (6.866699+6.927079-0.3)/2)
ggmap(SL) +
geom_point(data = adresser, aes(x = lon, y = lat), colour = "red", size = 1) +
geom_text_repel(data = adresser, aes(x = lon, y = lat, label = adresser),
col = "orange", size = 4, segment.color = NA) +
geom_text_repel(data = distance, aes(x = lon, y = lat, label = km),
col = "orange", size = 3, segment.color = NA) +
geom_text_repel(data = distance, aes(x = lon, y = lat+0.05, label = hours),
col = "orange", size = 3, segment.color = NA) +
geom_segment(data = Colombo2Unawatuna, aes(x = startLon, y = startLat, xend = endLon, yend = endLat),
colour ="yellow", size = 0.5) +
geom_segment(data = Unawatuna2Yala, aes(x = startLon, y = startLat, xend = endLon, yend = endLat),
colour ="yellow", size = 0.5) +
geom_segment(data = Yala2Ella, aes(x = startLon, y = startLat, xend = endLon, yend = endLat),
colour ="yellow", size = 0.5) +
geom_segment(data = Ella2Colombo, aes(x = startLon, y = startLat, xend = endLon, yend = endLat),
colour ="yellow", size = 0.5)
distance$lat <- c((6.927079+6.017447-0.2)/2, (6.017447+6.427169-0.15)/2, (6.427169+6.866699-0.3)/2, (6.866699+6.927079-0.35)/2)
ggmap(SL) +
geom_point(data = adresser, aes(x = lon, y = lat), colour = "red", size = 1) +
geom_text_repel(data = adresser, aes(x = lon, y = lat, label = adresser),
col = "orange", size = 4, segment.color = NA) +
geom_text_repel(data = distance, aes(x = lon, y = lat, label = km),
col = "orange", size = 3, segment.color = NA) +
geom_text_repel(data = distance, aes(x = lon, y = lat+0.05, label = hours),
col = "orange", size = 3, segment.color = NA) +
geom_segment(data = Colombo2Unawatuna, aes(x = startLon, y = startLat, xend = endLon, yend = endLat),
colour ="yellow", size = 0.5) +
geom_segment(data = Unawatuna2Yala, aes(x = startLon, y = startLat, xend = endLon, yend = endLat),
colour ="yellow", size = 0.5) +
geom_segment(data = Yala2Ella, aes(x = startLon, y = startLat, xend = endLon, yend = endLat),
colour ="yellow", size = 0.5) +
geom_segment(data = Ella2Colombo, aes(x = startLon, y = startLat, xend = endLon, yend = endLat),
colour ="yellow", size = 0.5)
ggmap(SL) +
geom_point(data = adresser, aes(x = lon, y = lat), colour = "red", size = 1) +
geom_text_repel(data = adresser, aes(x = lon, y = lat, label = adresser),
col = "orange", size = 4, segment.color = NA) +
geom_text_repel(data = distance, aes(x = lon, y = lat, label = km),
col = "orange", size = 3, segment.color = NA) +
geom_text_repel(data = distance, aes(x = lon, y = lat+0.05, label = hours),
col = "orange", size = 3, segment.color = NA) +
geom_segment(data = Colombo2Unawatuna, aes(x = startLon, y = startLat, xend = endLon, yend = endLat),
colour ="blue", size = 0.5) +
geom_segment(data = Unawatuna2Yala, aes(x = startLon, y = startLat, xend = endLon, yend = endLat),
colour ="blue", size = 0.5) +
geom_segment(data = Yala2Ella, aes(x = startLon, y = startLat, xend = endLon, yend = endLat),
colour ="blue", size = 0.5) +
geom_segment(data = Ella2Colombo, aes(x = startLon, y = startLat, xend = endLon, yend = endLat),
colour ="blue", size = 0.5)
?ggmap
ggmap
ggmap(get_map(maptype = "satellite"), extent = "device") +
stat_density2d(aes(x = lon, y = lat, colour = class), data = chkpts, bins = 5)
mu <- c(-95.3632715, 29.7632836); nDataSets <- sample(4:10,1)
chkpts <- NULL
for(k in 1:nDataSets){
a <- rnorm(2); b <- rnorm(2);
si <- 1/3000 * (outer(a,a) + outer(b,b))
chkpts <- rbind(
chkpts,
cbind(MASS::mvrnorm(rpois(1,50), jitter(mu, .01), si), k)
)
}
chkpts <- data.frame(chkpts)
names(chkpts) <- c("lon", "lat","class")
chkpts$class <- factor(chkpts$class)
ggmap(get_map(maptype = "satellite"), extent = "device") +
stat_density2d(aes(x = lon, y = lat, colour = class), data = chkpts, bins = 5)
View(chkpts)
ggmap(SL) +
geom_point(data = adresser, aes(x = lon, y = lat), colour = "red", size = 1) +
geom_text_repel(data = adresser, aes(x = lon, y = lat, label = adresser),
col = "orange", size = 4, segment.color = NA) +
geom_text_repel(data = distance, aes(x = lon, y = lat, label = km),
col = "orange", size = 3, segment.color = NA) +
geom_text_repel(data = distance, aes(x = lon, y = lat+0.05, label = hours),
col = "orange", size = 3, segment.color = NA) +
geom_segment(data = Colombo2Unawatuna, aes(x = startLon, y = startLat, xend = endLon, yend = endLat),
colour ="blue", size = 0.5) +
geom_segment(data = Unawatuna2Yala, aes(x = startLon, y = startLat, xend = endLon, yend = endLat),
colour ="blue", size = 0.5) +
geom_segment(data = Yala2Ella, aes(x = startLon, y = startLat, xend = endLon, yend = endLat),
colour ="blue", size = 0.5) +
geom_segment(data = Ella2Colombo, aes(x = startLon, y = startLat, xend = endLon, yend = endLat),
colour ="blue", size = 0.5)
ggmap(SL) +
geom_point(data = adresser, aes(x = lon, y = lat), colour = "red", size = 1) +
geom_text_repel(data = adresser, aes(x = lon, y = lat, label = adresser),
col = "orange", size = 4, segment.color = NA) +
geom_text_repel(data = distance, aes(x = lon, y = lat, label = km),
col = "orange", size = 3, segment.color = NA) +
geom_text_repel(data = distance, aes(x = lon, y = lat+0.05, label = hours),
col = "orange", size = 3, segment.color = NA) +
geom_segment(data = Colombo2Unawatuna, aes(x = startLon, y = startLat, xend = endLon, yend = endLat),
colour ="blue", size = 0.5) +
geom_segment(data = Unawatuna2Yala, aes(x = startLon, y = startLat, xend = endLon, yend = endLat),
colour ="yellow", size = 0.2) +
geom_segment(data = Yala2Ella, aes(x = startLon, y = startLat, xend = endLon, yend = endLat),
colour ="blue", size = 0.5) +
geom_segment(data = Ella2Colombo, aes(x = startLon, y = startLat, xend = endLon, yend = endLat),
colour ="yellow", size = 0.2)
ggmap(SL) +
geom_point(data = adresser, aes(x = lon, y = lat), colour = "red", size = 1) +
geom_text_repel(data = adresser, aes(x = lon, y = lat, label = adresser),
col = "orange", size = 4, segment.color = NA) +
geom_text_repel(data = distance, aes(x = lon, y = lat, label = km),
col = "orange", size = 3, segment.color = NA) +
geom_text_repel(data = distance, aes(x = lon, y = lat+0.05, label = hours),
col = "orange", size = 3, segment.color = NA) +
geom_segment(data = Colombo2Unawatuna, aes(x = startLon, y = startLat, xend = endLon, yend = endLat),
colour ="yellow", size = 0.2) +
geom_segment(data = Unawatuna2Yala, aes(x = startLon, y = startLat, xend = endLon, yend = endLat),
colour ="yellow", size = 0.2) +
geom_segment(data = Yala2Ella, aes(x = startLon, y = startLat, xend = endLon, yend = endLat),
colour ="yellow", size = 0.2) +
geom_segment(data = Ella2Colombo, aes(x = startLon, y = startLat, xend = endLon, yend = endLat),
colour ="yellow", size = 0.2)
ggmap(SL) +
geom_point(data = adresser, aes(x = lon, y = lat), colour = "red", size = 1) +
geom_text_repel(data = adresser, aes(x = lon, y = lat, label = adresser),
col = "orange", size = 4, segment.color = NA) +
geom_text_repel(data = distance, aes(x = lon, y = lat, label = km),
col = "orange", size = 3, segment.color = NA) +
geom_text_repel(data = distance, aes(x = lon, y = lat+0.05, label = hours),
col = "orange", size = 3, segment.color = NA) +
geom_segment(data = Colombo2Unawatuna, aes(x = startLon, y = startLat, xend = endLon, yend = endLat),
colour ="blue", size = 0.2) +
geom_segment(data = Unawatuna2Yala, aes(x = startLon, y = startLat, xend = endLon, yend = endLat),
colour ="blue", size = 0.2) +
geom_segment(data = Yala2Ella, aes(x = startLon, y = startLat, xend = endLon, yend = endLat),
colour ="blue", size = 0.2) +
geom_segment(data = Ella2Colombo, aes(x = startLon, y = startLat, xend = endLon, yend = endLat),
colour ="blue", size = 0.2)
ggmap(SL) +
geom_point(data = adresser, aes(x = lon, y = lat), colour = "red", size = 1) +
geom_text_repel(data = adresser, aes(x = lon, y = lat, label = adresser),
col = "orange", size = 4, segment.color = NA) +
geom_text_repel(data = distance, aes(x = lon, y = lat, label = km),
col = "orange", size = 3, segment.color = NA) +
geom_text_repel(data = distance, aes(x = lon, y = lat+0.05, label = hours),
col = "orange", size = 3, segment.color = NA) +
geom_segment(data = Colombo2Unawatuna, aes(x = startLon, y = startLat, xend = endLon, yend = endLat),
colour ="blue", size = 0.3) +
geom_segment(data = Unawatuna2Yala, aes(x = startLon, y = startLat, xend = endLon, yend = endLat),
colour ="blue", size = 0.3) +
geom_segment(data = Yala2Ella, aes(x = startLon, y = startLat, xend = endLon, yend = endLat),
colour ="blue", size = 0.3) +
geom_segment(data = Ella2Colombo, aes(x = startLon, y = startLat, xend = endLon, yend = endLat),
colour ="blue", size = 0.3)
ggmap(SL) +
geom_point(data = adresser, aes(x = lon, y = lat), colour = "red", size = 1) +
geom_text_repel(data = adresser, aes(x = lon, y = lat, label = adresser),
col = "orange", size = 4, segment.color = NA) +
geom_text_repel(data = distance, aes(x = lon, y = lat, label = km),
col = "orange", size = 3, segment.color = NA) +
geom_text_repel(data = distance, aes(x = lon, y = lat+0.05, label = hours),
col = "orange", size = 3, segment.color = NA) +
geom_segment(data = Colombo2Unawatuna, aes(x = startLon, y = startLat, xend = endLon, yend = endLat),
colour ="blue", size = 0.5) +
geom_segment(data = Unawatuna2Yala, aes(x = startLon, y = startLat, xend = endLon, yend = endLat),
colour ="blue", size = 0.5) +
geom_segment(data = Yala2Ella, aes(x = startLon, y = startLat, xend = endLon, yend = endLat),
colour ="blue", size = 0.5) +
geom_segment(data = Ella2Colombo, aes(x = startLon, y = startLat, xend = endLon, yend = endLat),
colour ="blue", size = 0.5)
library(ggmap)
library(ggrepel)
?get_map
geocode('Sri Lanka')
adresser <- c("Colombo, Sri Lanka", "Unawatuna, Sri Lanka", "Yala, Sri Lanka", "Ella, Sri Lanka")
coord <- geocode(adresser)
adresser <- cbind(adresser,coord)
adresser$adresser <- sub(', Sri Lanka', '', adresser$adresser)
distance <- rbind(
mapdist("Colombo, Sri Lanka", "Unawatuna, Sri Lanka", mode="driving", output="simple"),
mapdist("Unawatuna, Sri Lanka", "Yala, Sri Lanka", mode="driving", output="simple"),
mapdist("Yala, Sri Lanka", "Ella, Sri Lanka", mode="driving", output="simple"),
mapdist("Ella, Sri Lanka", "Colombo, Sri Lanka" , mode="driving", output="simple")
)
distance$lon <- c((79.86124+80.24886+0.3)/2, (80.24886+81.30815)/2, (81.30815+81.04655-0.15)/2, (81.04655+79.86124)/2)
distance$lat <- c((6.927079+6.017447-0.2)/2, (6.017447+6.427169-0.15)/2, (6.427169+6.866699-0.3)/2, (6.866699+6.927079-0.35)/2)
distance <- subset(distance, select = c(km, hours, lon, lat))
distance$km <- paste(round(distance$km,0), 'km', sep = " ")
distance$hours <- paste(round(distance$hours,1), 'timer', sep = " ")
Colombo2Unawatuna <- route("Colombo, Sri Lanka", "Unawatuna, Sri Lanka")
Unawatuna2Yala <- route("Unawatuna, Sri Lanka", "Yala, Sri Lanka")
Yala2Ella <- route("Yala, Sri Lanka", "Ella, Sri Lanka")
Ella2Colombo <- route("Ella, Sri Lanka", "Colombo, Sri Lanka")
SL <- get_map(location=c(lon = 80.62, lat = 6.5), zoom=9, maptype='satellite', source='google', color='color')
ggmap(SL) +
geom_point(data = adresser, aes(x = lon, y = lat), colour = "red", size = 1) +
geom_text_repel(data = adresser, aes(x = lon, y = lat, label = adresser),
col = "orange", size = 4, segment.color = NA) +
geom_text_repel(data = distance, aes(x = lon, y = lat, label = km),
col = "orange", size = 3, segment.color = NA) +
geom_text_repel(data = distance, aes(x = lon, y = lat+0.05, label = hours),
col = "orange", size = 3, segment.color = NA) +
geom_segment(data = Colombo2Unawatuna, aes(x = startLon, y = startLat, xend = endLon, yend = endLat),
colour ="blue", size = 0.5) +
geom_segment(data = Unawatuna2Yala, aes(x = startLon, y = startLat, xend = endLon, yend = endLat),
colour ="blue", size = 0.5) +
geom_segment(data = Yala2Ella, aes(x = startLon, y = startLat, xend = endLon, yend = endLat),
colour ="blue", size = 0.5) +
geom_segment(data = Ella2Colombo, aes(x = startLon, y = startLat, xend = endLon, yend = endLat),
colour ="blue", size = 0.5)
library(ggmap)
library(ggrepel)
?get_map
geocode('Sri Lanka')
adresser <- c("Colombo, Sri Lanka", "Unawatuna, Sri Lanka", "Yala, Sri Lanka", "Ella, Sri Lanka")
coord <- geocode(adresser)
adresser <- cbind(adresser,coord)
adresser$adresser <- sub(', Sri Lanka', '', adresser$adresser)
distance <- rbind(
mapdist("Colombo, Sri Lanka", "Unawatuna, Sri Lanka", mode="driving", output="simple"),
mapdist("Unawatuna, Sri Lanka", "Yala, Sri Lanka", mode="driving", output="simple"),
mapdist("Yala, Sri Lanka", "Ella, Sri Lanka", mode="driving", output="simple"),
mapdist("Ella, Sri Lanka", "Colombo, Sri Lanka" , mode="driving", output="simple")
)
distance$lon <- c((79.86124+80.24886+0.3)/2, (80.24886+81.30815)/2, (81.30815+81.04655-0.15)/2, (81.04655+79.86124)/2)
distance$lat <- c((6.927079+6.017447-0.2)/2, (6.017447+6.427169-0.15)/2, (6.427169+6.866699-0.3)/2, (6.866699+6.927079-0.35)/2)
distance <- subset(distance, select = c(km, hours, lon, lat))
distance$km <- paste(round(distance$km,0), 'km', sep = " ")
distance$hours <- paste(round(distance$hours,1), 'timer', sep = " ")
Colombo2Unawatuna <- route("Colombo, Sri Lanka", "Unawatuna, Sri Lanka")
Unawatuna2Yala <- route("Unawatuna, Sri Lanka", "Yala, Sri Lanka")
Yala2Ella <- route("Yala, Sri Lanka", "Ella, Sri Lanka")
Ella2Colombo <- route("Ella, Sri Lanka", "Colombo, Sri Lanka")
SL <- get_map(location=c(lon = 80.62, lat = 6.5), zoom=9, maptype='satellite', source='google', color='color')
ggmap(SL) +
geom_point(data = adresser, aes(x = lon, y = lat), colour = "red", size = 1) +
geom_text_repel(data = adresser, aes(x = lon, y = lat, label = adresser),
col = "orange", size = 4, segment.color = NA) +
geom_text_repel(data = distance, aes(x = lon, y = lat, label = km),
col = "orange", size = 3, segment.color = NA) +
geom_text_repel(data = distance, aes(x = lon, y = lat+0.05, label = hours),
col = "orange", size = 3, segment.color = NA) +
geom_segment(data = Colombo2Unawatuna, aes(x = startLon, y = startLat, xend = endLon, yend = endLat),
colour ="blue", size = 0.5) +
geom_segment(data = Unawatuna2Yala, aes(x = startLon, y = startLat, xend = endLon, yend = endLat),
colour ="blue", size = 0.5) +
geom_segment(data = Yala2Ella, aes(x = startLon, y = startLat, xend = endLon, yend = endLat),
colour ="blue", size = 0.5) +
geom_segment(data = Ella2Colombo, aes(x = startLon, y = startLat, xend = endLon, yend = endLat),
colour ="blue", size = 0.5)
install.packages('IsolationForest')
install.packages("IsolationForest", repos="http://R-Forge.R-project.org")
ls -l /Library/Frameworks/R.framework/Versions/
ls -l /Library/Frameworks/R.framework/Versions/
ls -l /Library/Frameworks/R.framework/Versions/
ls -l /Library/Frameworks/R.framework/Versions/
install.packages('IsolationForest')
library(dplyr)
library(hflights)
install.packages('hflights')
library(hflights)
fly <- library(hflights)
fly <- hflights
View(fly)
fly[fly$Month==1 & fly$DayofMonth1,]
fly[fly$Month==1 & fly$DayofMonth==1,]
fly <- tbl_df(hflights)
fly[fly$Month==1 & fly$DayofMonth==1,]
filter(fly, Month==1, DayofMonth==1)
fly[fly$Month==1 & fly$DayofMonth==1,]
filter(fly, Month==1, DayofMonth==1)
filter(fly, uniqueCarrier=='AA' | uniqueCarrier=='UA')
View(fly)
filter(fly, UniqueCarrier=='AA' | UniqueCarrier=='UA')
filter(fly, UniqueCarrier %in% c('AA','UA'))
fly[, c('DepTime', 'ArrTime', 'FlightNumber')]
fly[, c('DepTime', 'ArrTime', 'FlightNum')]
select(fly, DepTime, ArrTime, FlightNum)
select(fly, Year:DayofMonth)
View(fly)
View(fly)
select(fly, Year:DepTime)
select(fly, contains("Taxi"), contains('Delay'))
select(fly, matches("Taxi"))
select(fly, ends_with("Taxi"))
select(fly, starts_with("Taxi"))
select(fly, ends_with("t"))
select(fly, UniqueCarrier, DepDelay)
filter(select(fly, UniqueCarrier, DepDelay), DepDelay > 60)
fly %>%
select(UniqueCarrier, DepDelay) %>%
filter(DepDelay > 60)
fly[order(fly$DepTime),]
fly[order(fly$DepDelay),]
arrange(fly, desc(DepDelay))
fly[order(fly$DepTime),]
arrange(fly, desc(DepTime))
?arrange
arrange(fly, DepTime)
fly %>% desc(DepTime) %<% arrange()
fly %>% desc(DepTime) %>% arrange()
fly %>%  arrange(desc(DepTime))
fly$speed <- fly$Distance / fly$AirTime * 60
mutate(fly, speed = Distance/AirTime*60)
fly <- mutate(fly, speed = Distance/AirTime*60)
View(fly)
fly$speed <- NULL
library(hflights)
fly <- tbl_df(hflights) # tbl_df er bare en wrapper til data.frame
fly <- mutate(fly, speed = Distance/AirTime*60)
library(hflights)
fly <- tbl_df(hflights) # tbl_df er bare en wrapper til data.frame
fly %>% mutate(speed = Distance/AirTime*60)
fyl <- fly %>% mutate(speed = Distance/AirTime*60)
fly <- mutate(fly, speed = Distance/AirTime*60)
library(hflights)
fly <- tbl_df(hflights) # tbl_df er bare en wrapper til data.frame
head(with(fly, tapply(ArrDelay, Dest, mean, na.rm = T)))
head(aggregate(ArrDelay ~ Dest, mean))
head(aggregate(ArrDelay ~ Dest, fly, mean))
summarise(fly, avg_delay = mean(ArrDelay, na.rm = T), group_by(Dest))
summarise(fly,  group_by(Dest), avg_delay = mean(ArrDelay, na.rm = T),)
summarise(fly,  group_by(Dest), avg_delay = mean(ArrDelay, na.rm = T))
fly %>% group_by(Dest) %>% summarise(avg_delay = mean(ArrDelay, na.rm = T))
summarise(group_by(fly, Dest), avg_delay = mean(ArrDelay, na.rm = T))
?tapply
summarise_each(group_by(fly, UniqueCarrier), funs(mean), Cancelled, Diverted)
fly %>% group_by(UniqueCarrier) %>% summarise_each(funs(mean), Cancelled, Diverted)
names(fly)
flt %>% group_by(UniqueCarrier) %>% summarise_each(funs(min), ArrDelay, DepDelay)
flt %>% group_by(UniqueCarrier) %>% summarise_each(funs(min(., na.rm=T), max(., na.rm=T)),
match(Delay))
flt %>% group_by(UniqueCarrier) %>% summarise_each(funs(min(., na.rm=T), max(., na.rm=T)),
match('Delay'))
flt %>% group_by(UniqueCarrier) %>%
summarise_each(funs(min(., na.rm=T), max(., na.rm=T)), matches('Delay'))
flt %>% group_by(UniqueCarrier) %>%
summarise_each(funs(min(., na.rm=T), max(., na.rm=T)), matches('Delay'))
fly %>% group_by(UniqueCarrier) %>%
summarise_each(funs(min(., na.rm=T), max(., na.rm=T)), matches('Delay'))
names(fly)
fly %>% group_by(Month, DayofMonth) %>% summarise(fly_count = n()) %>% arrange(desc(fly_count))
fly %>% group_by(Month, DayofMonth) %>% tally(sort=T)
fly %>% group_by(Dest) %>% summarise(fly_count = n(), plane_count = n_distinct(Tailnum))
fly %>% group_by(Dest) %>% summarise(fly_count = n(), plane_count = n_distinct(TailNum))
View(fly)
fly %>% group_by(Dest) %>% select(Cancelled) %>% table() %>% head()
library(dplyr)
library(hflights)
fly <- tbl_df(hflights) # tbl_df er bare en wrapper til data.frame
fly %>%
group_by(UniqueCarrier) %>%
select(Month, DayofMonth, DepDelay) %>%
filter(min_rank(desc(Depdaley)) <= 2) %>%
arrange(UniqueCarrier, desc(DepDelay))
fly %>%
group_by(UniqueCarrier) %>%
select(Month, DayofMonth, DepDelay) %>%
filter(min_rank(desc(Depdelay)) <= 2) %>%
arrange(UniqueCarrier, desc(DepDelay))
fly %>%
group_by(UniqueCarrier) %>%
select(Month, DayofMonth, DepDelay) %>%
filter(min_rank(desc(DepDelay)) <= 2) %>%
arrange(UniqueCarrier, desc(DepDelay))
fly %>%
group_by(UniqueCarrier) %>%
select(Month, DayofMonth, DepDelay) %>%
top_n(2) %>%
arrange(UniqueCarrier, desc(DepDelay))
sample_n(fly, 5)
sample_n(fly, 5)
sample_frac(fly, 0.25, replace = T)
glimpse(fly)
load('~/Dropbox/R/Machine learning med R/Titanic/træningsdata.RData')
load('~/Dropbox/R/Machine learning med R/Titanic/testdata.RData')
rm(list = ls())
load('~/Dropbox/R/Machine learning med R/Titanic/træningsdata.RData')
load('~/Dropbox/R/Machine learning med R/Titanic/testdata.RData')
setwd("~/Dropbox/R/Machine learning med R/Titanic")
source('~/Dropbox/R/Machine learning med R/Titanic/data_prep.R')
getdata(træningsdata=træningsdata, testdata=testdata)
getdata(træningsdata=træningsdata, testdata=testdata)
getdata(træningsdata=træningsdata, testdata=testdata)
source('~/Dropbox/R/Machine learning med R/Titanic/data_prep.R')
getdata(træningsdata=træningsdata, testdata=testdata)
data <- getdata(træningsdata=træningsdata, testdata=testdata)
data <- getdata(træningsdata=træningsdata, testdata=testdata)
data
data <- getdata(træningsdata=træningsdata, testdata=testdata)
data
training <- data[[1]]
test <- data[[2]]
training_scale <- data[[3]]
load('~/Dropbox/R/Machine learning med R/Titanic/træningsdata.RData')
load('~/Dropbox/R/Machine learning med R/Titanic/testdata.RData')
source('~/Dropbox/R/Machine learning med R/Titanic/data_prep.R')
data <- getdata(træningsdata=træningsdata, testdata=testdata)
training <- data[[1]]
test <- data[[2]]
training_scale <- data[[3]]
test_scale <- data[[4]]
rm(testdata, træningsdata, data, getdata)
rm(list = ls())
load('~/Dropbox/R/Machine learning med R/Titanic/træningsdata.RData')
load('~/Dropbox/R/Machine learning med R/Titanic/testdata.RData')
source('~/Dropbox/R/Machine learning med R/Titanic/data_prep.R')
data <- getdata(træningsdata=træningsdata, testdata=testdata)
training <- data[[1]]
test <- data[[2]]
training_scale <- data[[3]]
test_scale <- data[[4]]
rm(data, getdata)
### henter data ----
rm(list = ls())
load('~/Dropbox/R/Machine learning med R/Titanic/træningsdata.RData')
load('~/Dropbox/R/Machine learning med R/Titanic/testdata.RData')
source('~/Dropbox/R/Machine learning med R/Titanic/data_prep.R')
data <- getdata(træningsdata=træningsdata, testdata=testdata)
training <- data[[1]]
test <- data[[2]]
training_scale <- data[[3]]
test_scale <- data[[4]]
rm(data, getdata)
### caret pakke ----
library(caret)
library(doParallel)
library(randomForest)
modelLookup("RandomForest")
library(randomForest)
modelLookup("RandomForest")
modelLookup("randomForest")
library(caret)
modelLookup("rf")
detectCores()
registerDoParallel(4)
getDoParWorkers()
ctrl <- trainControl(method = "oob") # er hurtigere og giver valid accuarcy
grid <- expand.grid(.mtry=c(1:(ncol(training)-1))) # c(1:(ncol(training)-1))
system.time(m_rf <- train(Survived ~ ., data=training, method="rf", metric="Accuracy",
tuneGrid=grid, trControl=ctrl, ntree = 500, importance = T, verbose = T)) #
m_rf
varImp(m_rf, scale = F)
ctrl <- trainControl(method = "repeatedcv", number = 5, repeats = 1, selectionFunction = "best")
system.time(m_rf <- train(Survived ~ ., data=training, method="rf", metric="Accuracy",
tuneGrid=grid, trControl=ctrl, ntree = 500, importance = T, verbose = T)) #
m_rf
varImp(m_rf, scale = F)
